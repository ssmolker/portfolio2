{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/sasha/Desktop/portfolio2/components/login.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { useState } from \"react\";\nimport { render } from 'react-dom';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nexport function Loginform() {\n  var _this = this;\n\n  var _useState = useState([{\n    label: \"Username\",\n    placeholder: \"U$er_example1\",\n    regEx: /[a-z\\D\\d]+/,\n    valid: false,\n    value: \"\",\n    loggedIn: false,\n    errorMsg: \"Can include any special character,number, or character.\"\n  }, {\n    label: \"Password\",\n    placeholder: \"\",\n    regEx: /[a-z\\D\\d]+/,\n    valid: false,\n    value: \"\",\n    loggedIn: false,\n    errorMsg: \"Please retry your password\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      formFields = _useState2[0],\n      setFormFields = _useState2[1];\n\n  var textChange = function textChange(value, formField) {\n    console.log(value);\n    setFormFields(function (prevValue) {\n      var newArray = _toConsumableArray(prevValue);\n\n      var obj = newArray.find(function (ff) {\n        return ff.label == formField.label;\n      });\n      obj.value = value;\n      obj.valid = formField.regEx.test(value);\n      return newArray;\n    });\n  };\n\n  var formValid = true;\n\n  for (var _iterator = _createForOfIteratorHelperLoose(formFields), _step; !(_step = _iterator()).done;) {\n    var elem = _step.value;\n    formValid = formValid && elem.valid;\n  }\n\n  var submitForm = function submitForm() {\n    console.log(formFields.map(function (field) {\n      return {\n        label: field.label,\n        value: field.value\n      };\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, formFields.map(function (formField) {\n    return React.createElement(React.Fragment, null, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    }, formField.label), React.createElement(TextInput, {\n      keyboardType: formField.numeric ? \"numeric\" : undefined,\n      style: styles.container,\n      placeholder: formField.placeholder,\n      onChangeText: function onChangeText(value) {\n        return textChange(value, formField);\n      },\n      value: formField.value,\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    }), !formField.valid ? React.createElement(Text, {\n      style: styles.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 34\n      }\n    }, formField.errorMsg) : undefined);\n  }), React.createElement(Button, {\n    onPress: submitForm,\n    color: \"black\",\n    title: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    width: \"700px\",\n    height: \"30px\"\n  },\n  view: {\n    marginVertical: \"30px\"\n  },\n  error: {\n    color: \"red\"\n  }\n});\nexport default Loginform;","map":{"version":3,"sources":["/Users/sasha/Desktop/portfolio2/components/login.js"],"names":["StatusBar","React","useState","render","Loginform","label","placeholder","regEx","valid","value","loggedIn","errorMsg","formFields","setFormFields","textChange","formField","console","log","prevValue","newArray","obj","find","ff","test","formValid","elem","submitForm","map","field","styles","body","numeric","undefined","container","error","StyleSheet","create","backgroundColor","width","height","view","marginVertical","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { useState } from \"react\"; \nimport { render } from 'react-dom';\nimport { Button, StyleSheet, Text, View, TextInput} from 'react-native';\n// import {loggedIn} from '..../App.js'\n\nexport function Loginform() {\n  \n   let [formFields, setFormFields] = useState([\n      {\n         label: \"Username\",\n         placeholder:\"U$er_example1\",\n         regEx:/[a-z\\D\\d]+/,\n         valid: false,\n         value: \"\",\n         loggedIn: false,\n         errorMsg:\"Can include any special character,number, or character.\",\n      },\n      {\n         label: \"Password\",\n         placeholder:\"\",\n         regEx:/[a-z\\D\\d]+/,\n         valid: false,\n         value: \"\",\n         loggedIn: false,\n         errorMsg:\"Please retry your password\",\n      },\n   ])\n   \n   let textChange = (value, formField) => {\n      console.log(value)\n      setFormFields((prevValue) => {\n         let newArray = [...prevValue]\n         let obj = newArray.find((ff) => ff.label == formField.label)\n        obj.value = value\n         obj.valid = formField.regEx.test(value)\n         return newArray\n   })\n  }\n\n  let formValid = true\n  for(var elem of formFields){\n    formValid = formValid && elem.valid\n  }\n\n  let submitForm = () =>{\n    console.log(\n        formFields.map((field)=>{\n          return{\n              label: field.label,\n              value: field.value,\n            }\n          }))\n    }\n \n   return (\n      <View style={styles.body}>\n            {formFields.map((formField)=>(\n               <>\n               <Text>{formField.label}</Text>\n               <TextInput\n               keyboardType = {formField.numeric ? \"numeric\" : undefined}\n               style={styles.container} placeholder={formField.placeholder} \n               onChangeText={(value) => textChange(value, formField)}\n               value={formField.value}  secureTextEntry={true}\n               ></TextInput>\n            {!formField.valid ? (<Text style={styles.error}>{formField.errorMsg}</Text>) : undefined}\n               </>\n            ))}\n            <Button onPress={submitForm} color=\"black\" title=\"Submit\"></Button>\n      </View>\n      );\n}\n\n            \n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor:\"white\",\n    width:\"700px\",\n    height:\"30px\",\n  },\n  view:{\n    marginVertical:\"30px\",\n  },\n  error:{\n    color:\"red\",\n  },\n});\n\nexport default Loginform;\n"]},"metadata":{},"sourceType":"module"}